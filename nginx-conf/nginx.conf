http2 on;

client_max_body_size 512M;

# Trust the Docker bridge gateway as a proxy
set_real_ip_from 172.18.0.1;

# Extract real IP from X-Forwarded-For
real_ip_header X-Forwarded-For;
real_ip_recursive on;

proxy_set_header   Host              $host;
proxy_set_header   X-Real-IP         $remote_addr;
proxy_set_header   X-Forwarded-Proto $scheme;
proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;

server_tokens off;

server {
    listen 80 default_server;
    listen [::]:80 default_server;

    server_name _;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name tikhonnnnn.com;

    ssl_certificate     /etc/letsencrypt/live/tikhonnnnn.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tikhonnnnn.com/privkey.pem;

    include /etc/nginx/conf.d/options/options-ssl-nginx.conf;

    return 302 https://youtu.be/dQw4w9WgXcQ?si=Cl5EqVYfNU9bkOg6;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name mountainteaband.ru;

    ssl_certificate     /etc/letsencrypt/live/mountainteaband.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mountainteaband.ru/privkey.pem;

    include /etc/nginx/conf.d/options/options-ssl-nginx.conf;

    location / {
        proxy_pass http://ssh-server:10000;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name mykpp.online;

    ssl_certificate     /etc/letsencrypt/live/mykpp.online/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mykpp.online/privkey.pem;

    include /etc/nginx/conf.d/options/options-ssl-nginx.conf;

    location /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /\n";
    }

    location / {
        proxy_pass http://ssh-server:10001;
    }
}
